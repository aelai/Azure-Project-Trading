{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfTradingProject"
		},
		"KeyVaultGeneralUse_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvGeneralUse.vault.azure.net/"
		},
		"allpurposegeneralstorage_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://allpurposegeneralstorage.blob.core.windows.net"
		},
		"allpurposegeneralstorage_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "75099764-499a-4c9a-be3b-eb20119a46dd"
		},
		"allpurposegeneralstorage_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "644aa91d-3d52-4aaf-909f-95b95ca9622f"
		},
		"API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().webaddress}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Stock List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "StockUniverse",
								"type": "DatasetReference",
								"parameters": {
									"folder": "Control",
									"file": "StockUniverse.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Stock",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter for Active Stock",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter for Active Stock').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Download from API",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tiingo",
											"type": "DatasetReference",
											"parameters": {
												"APIAddress": {
													"value": "@concat('\nhttps://api.tiingo.com/tiingo/daily/',\nitem().StockCode,\n'/prices?startDate=2000-01-01&token=ad7a3439179844131f3a468e9c90d23dec925ac3\n')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "StockUniverse",
											"type": "DatasetReference",
											"parameters": {
												"folder": "Base/StockPrices",
												"file": {
													"value": "@concat(\nitem().Stockcode,\n'.csv'\n)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Filter for Active Stock",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Stock List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Stock List').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(\nitem().IsActive,\n'1'\n)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StockUniverse')]",
				"[concat(variables('factoryId'), '/datasets/Tiingo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVaultGeneralUse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVaultGeneralUse_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/allpurposegeneralstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('allpurposegeneralstorage_properties_typeProperties_serviceEndpoint')]",
					"tenant": "[parameters('allpurposegeneralstorage_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('allpurposegeneralstorage_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultGeneralUse",
							"type": "LinkedServiceReference"
						},
						"secretName": "valuegeneralpurposeserviceprinciple"
					},
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultGeneralUse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StockUniverse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "allpurposegeneralstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": "trading"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "StockCode",
						"type": "String"
					},
					{
						"name": "IsActive",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/allpurposegeneralstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"webaddress": {
						"type": "string",
						"defaultValue": "https://api.tiingo.com/tiingo/daily/"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tiingo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "API",
					"type": "LinkedServiceReference",
					"parameters": {
						"webaddress": {
							"value": "@dataset().APIAddress",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"APIAddress": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/API')]"
			]
		}
	]
}