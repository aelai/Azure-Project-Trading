{
	"name": "DFUpdateActiveStocksList",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SinkRAW_SimFin",
						"type": "DatasetReference"
					},
					"name": "GetTickers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureProjectStockList",
						"type": "DatasetReference"
					},
					"name": "WriteToControl"
				}
			],
			"transformations": [
				{
					"name": "CheckforUpdates"
				},
				{
					"name": "FlattenDataArray"
				},
				{
					"name": "CreateColumns"
				}
			],
			"script": "source(output(\n\t\tcolumns as string[],\n\t\tdata as string[][]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tlimit: 100,\n\tdocumentForm: 'documentPerLine') ~> GetTickers\nCreateColumns alterRow(insertIf(true())) ~> CheckforUpdates\nGetTickers foldDown(unroll(data, data),\n\tmapColumn(\n\t\tdata\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenDataArray\nFlattenDataArray derive(SimFinID = data[1],\n\t\tTicker = data[2],\n\t\tExchange = 'NASDAQ',\n\t\tActive = 0,\n\t\tInitialLoadDateKey = toInteger(dayOfYear(currentDate())) * 10000,\n\t\tLastUpdateDateKey = ERROR_FUNCTION('')) ~> CreateColumns\nCheckforUpdates sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['AzureProjectActiveStock.csv'],\n\tmapColumn(\n\t\tTicker,\n\t\tExchange,\n\t\tActive\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> WriteToControl"
		}
	}
}