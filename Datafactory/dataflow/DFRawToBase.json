{
	"name": "DFRawToBase",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SinkRAW_Tiingo",
						"type": "DatasetReference"
					},
					"name": "RawTiingo"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Base_EoDPrices",
						"type": "DatasetReference"
					},
					"name": "BASETiingo"
				}
			],
			"transformations": [
				{
					"name": "UpsertbyRow"
				},
				{
					"name": "NewColTicker"
				}
			],
			"script": "source(output(\n\t\tadjClose as double,\n\t\tadjHigh as double,\n\t\tadjLow as double,\n\t\tadjOpen as double,\n\t\tadjVolume as integer,\n\t\tclose as double,\n\t\tdate as string,\n\t\tdivCash as double,\n\t\thigh as double,\n\t\tlow as double,\n\t\topen as double,\n\t\tsplitFactor as double,\n\t\tvolume as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 100,\n\trowUrlColumn: 'FilePath',\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:[(concat('RAW/Tiingo/20210410/','*'))]) ~> RawTiingo\nRawTiingo alterRow(upsertIf(true())) ~> UpsertbyRow\nUpsertbyRow derive(Ticker = left(substring(FilePath,22), (length(substring(FilePath,22)) - 5 ) )) ~> NewColTicker\nNewColTicker sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TiingoEoDPrices.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BASETiingo"
		}
	}
}