{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFAZProject2021"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DFUpdateActiveStocksList')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SinkRAW_SimFin",
								"type": "DatasetReference"
							},
							"name": "GetTickers"
						},
						{
							"dataset": {
								"referenceName": "Source_ControlStockPortolfio",
								"type": "DatasetReference"
							},
							"name": "GetControlFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureProjectStockList",
								"type": "DatasetReference"
							},
							"name": "SinkToControlFile"
						}
					],
					"transformations": [
						{
							"name": "FlattenDataArray"
						},
						{
							"name": "CreateColumns"
						},
						{
							"name": "JoinToControlFile"
						},
						{
							"name": "SelectColumns"
						},
						{
							"name": "FilterForNew"
						},
						{
							"name": "UnionToControl"
						},
						{
							"name": "DerivedColumnSimFinID"
						}
					],
					"script": "source(output(\n\t\tcolumns as string[],\n\t\tdata as string[][]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tlimit: 100,\n\tdocumentForm: 'documentPerLine') ~> GetTickers\nsource(output(\n\t\tSimFinID as integer,\n\t\tTicker as string,\n\t\tActive as integer,\n\t\tInitialLoadDateKey as integer,\n\t\tLastUpdateDateKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> GetControlFile\nGetTickers foldDown(unroll(data, data),\n\tmapColumn(\n\t\tdata\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenDataArray\nFlattenDataArray derive(SimFinID = data[1],\n\t\tTicker = data[2],\n\t\tActive = 0,\n\t\tInitialLoadDateKey = (toInteger(year(currentDate())) * 10000) + (toInteger(dayOfMonth(currentDate())) * 100) + (toInteger(month(currentDate()))),\n\t\tLastUpdateDateKey = ( (toInteger(year(currentDate())) * 10000) + (toInteger(dayOfMonth(currentDate())) * 100) + (toInteger(month(currentDate()))) ) - 10000) ~> CreateColumns\nCreateColumns, GetControlFile join(toInteger(CreateColumns@SimFinID) == GetControlFile@SimFinID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToControlFile\nDerivedColumnSimFinID select(mapColumn(\n\t\tdata,\n\t\tSimFinID = DC_SimFinID,\n\t\tTicker = CreateColumns@Ticker,\n\t\tActive = CreateColumns@Active,\n\t\tInitialLoadDateKey = CreateColumns@InitialLoadDateKey,\n\t\tLastUpdateDateKey = CreateColumns@LastUpdateDateKey,\n\t\tSimFinID = GetControlFile@SimFinID,\n\t\tTicker = GetControlFile@Ticker,\n\t\tActive = GetControlFile@Active,\n\t\tInitialLoadDateKey = GetControlFile@InitialLoadDateKey,\n\t\tLastUpdateDateKey = GetControlFile@LastUpdateDateKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nJoinToControlFile filter(GetControlFile@Ticker=='') ~> FilterForNew\nSelectColumns, GetControlFile union(byName: true)~> UnionToControl\nFilterForNew derive(DC_SimFinID = toInteger(CreateColumns@SimFinID)) ~> DerivedColumnSimFinID\nUnionToControl sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tSimFinID,\n\t\tTicker,\n\t\tActive,\n\t\tInitialLoadDateKey,\n\t\tLastUpdateDateKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkToControlFile"
				}
			},
			"dependsOn": []
		}
	]
}